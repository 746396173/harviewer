/**
 * Check custom time stamps generated by console.timeStamp() method.
 */
define([
  'intern',
  'intern!object',
  'intern/chai!assert',
  'require',
  './DriverUtils',
  'intern/dojo/node!leadfoot/helpers/pollUntil'
], function(intern, registerSuite, assert, require, DriverUtils, pollUntil) {
  var harViewerBase = intern.config.harviewer.harViewerBase;
  var testBase = intern.config.harviewer.testBase;

  registerSuite({
    name: 'testEmbeddedInvalidPreview',

    'testEmbeddedInvalidPreview1': function() {
      // Some of these tests need a larger timeout for finding DOM elements
      // because we need the HAR to parse/display fully before we query the DOM.
      var timeout = 10 * 1000;
      var r = this.remote;
      var utils = new DriverUtils(r);

      // HAR file is specified inside the test page.
      var url = testBase + "tests/testEmbeddedInvalidPreview1.html.php";

      return r
        .setFindTimeout(timeout)
        .get(url)
        .findByCssSelector("iframe")
        .then(pollUntil(DriverUtils.querySelectAllInFrameAndReturnLengthOrNull, ['#preview', '.errorTable'], timeout))
        .then(function(len) {
          assert.strictEqual(len, 1, "#preview1.errorTable");
        })
        .then(pollUntil(DriverUtils.querySelectAllInFrameAndReturnLengthOrNull, ['#preview', '.errorRow'], timeout))
        .then(function(len) {
          assert.strictEqual(len, 1, "#preview1.errorRow");
        })
        .then(pollUntil(DriverUtils.querySelectAllInFrameAndReturnLengthOrNull, ['#preview', '.errorProperty'], timeout))
        .then(function(len) {
          assert.strictEqual(len, 1, "#preview1.errorProperty");
        })
        .then(pollUntil(DriverUtils.querySelectAllInFrameAndReturnLengthOrNull, ['#preview', '.errorMessage'], timeout))
        .then(function(len) {
          assert.strictEqual(len, 1, "#preview1.errorMessage");
        });
    },

    'testEmbeddedInvalidPreview2': function() {
      // Some of these tests need a larger timeout for finding DOM elements
      // because we need the HAR to parse/display fully before we query the DOM.
      var timeout = 10 * 1000;
      var r = this.remote;
      var utils = new DriverUtils(r);

      // HAR file is specified inside the test page.
      var url = testBase + "tests/testEmbeddedInvalidPreview2.html.php";

      return r
        .setFindTimeout(timeout)
        .get(url)
        .findByCssSelector("iframe")
        .then(pollUntil(DriverUtils.querySelectAllInFrameAndReturnLengthOrNull, ['#preview', '.pageTable'], timeout))
        .then(function(len) {
          assert.strictEqual(len, 1, "#preview1.pageTable");
        })
        .then(pollUntil(DriverUtils.querySelectAllInFrameAndReturnLengthOrNull, ['#preview', '.netRow'], timeout))
        .then(function(len) {
          assert.strictEqual(len, 49, "#preview1.errorRow");
        });
    }
  });
});
